#include <stdio.h>
#include <stdlib.h>

struct stack
{
    int size;
    int top;
    int *arr;
};

int ifEmpty(struct stack *ptr)
{
    if (ptr->top == -1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}

int isFull(struct stack *ptr)
{
    if (ptr->top == ptr->size - 1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
void push(struct stack *ptr, int val)
{
    if (isFull(ptr))
    {
        printf("Stack overflow. Cannot Push %d in the stack \n", val);
    }
    else
    {
        ptr->top++;
        ptr->arr[ptr->top] = val;
    }
}

int pop(struct stack *ptr)
{
    if (isEmpty(ptr))
    {
        printf("Stack underflow");
        return -1;
    }
    else
    {
        int val = ptr->arr[ptr->top];
        ptr->top--;
        return val;
    }
}

int main()
{
    struct stack *sp = (struct stack *)malloc(sizeof(struct stack *));
    sp->size = 10;
    sp->top = -1;
    sp->arr = (int *)malloc(sp->size * sizeof(int));
    printf("Stack created");
    printf("Before push, Full: %d \n", isFull(sp));
    printf("Before push, Empty: %d \n", isEmpty(sp));
    push(sp, 1);
    push(sp, 21);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    push(sp, 2);
    printf("After push, Full: %d \n", isFull(sp));
    printf("After push, Empty: %d \n", isEmpty(sp));
    return 0;
}
